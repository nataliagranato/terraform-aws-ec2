name: Create Release

on:
  push:
    branches:
      - main

jobs:
  create_release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "<>"

      - name: Check if there are tags
        id: check_tags
        run: |
          tags=$(git tag)
          if [ -z "$tags" ]; then
            echo "No tags found in the repository."
            echo "Creating initial tag: v1.0.0"
            git tag v1.0.0
            echo "::set-output name=new_tag::v1.0.0"
          else
            latest_tag=$(git describe --tags --abbrev=0)
            echo "::set-output name=new_tag::$latest_tag"
          fi

      - name: Push Tag to GitHub
        if: success() && steps.check_tags.outputs.new_tag != ''
        run: |
          git push origin ${{ steps.check_tags.outputs.new_tag }}

      - name: Install git-changelog
        run: pip install git-changelog

      - name: Generate Changelog
        id: changelog
        run: |
          latest_tag=${{ steps.check_tags.outputs.new_tag }}
          git-changelog -t ${latest_tag}..HEAD -s > RELEASE_NOTES.md

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.USER_TOKEN }}
        with:
          tag_name: ${{ steps.check_tags.outputs.new_tag }}
          release_name: Release ${{ steps.check_tags.outputs.new_tag }}
          body_path: ./RELEASE_NOTES.md
          draft: false
          prerelease: false
